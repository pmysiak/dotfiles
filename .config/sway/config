# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.



### Variables
# Logo key. Use Mod1 for Alt. Mod4 is Windows key
set $mod Mod4

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

# Your preferred terminal emulator
#set $term gnome-terminal
set $term alacritty

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
#set $menu --no-startup-id ~/.config/rofi/launchers/type-1/launcher.sh | xargs swaymsg exec --
set $menu --no-startup-id exec wofi --show run --width=500 --height=300 --insensitive

include /etc/sway/config-vars.d/*

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg ~/desktop/background.png fill

#
# Multi monitor setup
# swaymsg -t get_outputs
#
#output DP-6 position 0,0
#output DP-8 position 0,0

#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
#exec_always swayidle -w \
#    timeout 30 'swaylock' \
#    timeout 31 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"'
#    #before-sleep 'swaylock'
#    #before-sleep 'swaymsg "output * dpms off"'


#
# Lock computer
#
bindsym Control+Alt+l exec swaylock
#bindsym Control+Alt+l exec kill -SIGUSR1 `pgrep swayidle`


# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+q kill

    # Start your launcher
    #bindsym $mod+d exec $menu
    exec ulauncher --hide-window
    bindsym $mod+d exec ulauncher-toggle

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Attaching workspaces to outputs
    # swaymsg -t get_outputs
    workspace 1 output DP-4 DP-1 eDP-1
    workspace 2 output DP-4 DP-1 eDP-1
    workspace 3 output DP-4 DP-1 eDP-1

    # Switch to workspace
    bindsym --to-code $mod+1 workspace number 1
    bindsym --to-code $mod+2 workspace number 2
    bindsym --to-code $mod+3 workspace number 3
    bindsym --to-code $mod+4 workspace number 4
    bindsym --to-code $mod+5 workspace number 5
    bindsym --to-code $mod+6 workspace number 6
    bindsym --to-code $mod+7 workspace number 7
    bindsym --to-code $mod+8 workspace number 8
    bindsym --to-code $mod+9 workspace number 9
    bindsym --to-code $mod+0 workspace number 10
    
    # Switch workspace by numpad keys
    bindsym $mod+KP_1 workspace number 1
    bindsym $mod+KP_2 workspace number 2
    bindsym $mod+KP_3 workspace number 3
    bindsym $mod+KP_4 workspace number 4
    bindsym $mod+KP_5 workspace number 5
    bindsym $mod+KP_6 workspace number 6
    bindsym $mod+KP_7 workspace number 7
    bindsym $mod+KP_8 workspace number 8
    bindsym $mod+KP_9 workspace number 9
    bindsym $mod+KP_0 workspace number 10
    
    # Move focused container to workspace
    bindsym --to-code $mod+Shift+1 move container to workspace number 1; workspace 1
    bindsym --to-code $mod+Shift+2 move container to workspace number 2; workspace 2
    bindsym --to-code $mod+Shift+3 move container to workspace number 3; workspace 3
    bindsym --to-code $mod+Shift+4 move container to workspace number 4; workspace 4
    bindsym --to-code $mod+Shift+5 move container to workspace number 5; workspace 5
    bindsym --to-code $mod+Shift+6 move container to workspace number 6; workspace 6
    bindsym --to-code $mod+Shift+7 move container to workspace number 7; workspace 7
    bindsym --to-code $mod+Shift+8 move container to workspace number 8; workspace 8
    bindsym --to-code $mod+Shift+9 move container to workspace number 9; workspace 9
    bindsym --to-code $mod+Shift+0 move container to workspace number 10; workspace 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

    # Move workspace to monitor
    bindsym $mod+Ctrl+Shift+Left move workspace to output left
    bindsym $mod+Ctrl+Shift+Right move workspace to output right
    bindsym $mod+Ctrl+Shift+$left move workspace to output left
    bindsym $mod+Ctrl+Shift+$right move workspace to output right

    bindsym $mod+Ctrl+Left workspace prev
    bindsym $mod+Ctrl+Right workspace next
    bindsym $mod+Ctrl+$left workspace prev
    bindsym $mod+Ctrl+$right workspace next

    bindsym Alt+Tab workspace back_and_forth

    workspace_auto_back_and_forth yes

#
# Window title format
#
#for_window [all] title_format "%title - xxx"
#bindsym $mod+p title_format [class=".*"] "Important | %title"


# Heidi connection window
for_window [title="Session manager"] floating enable

# Heidi export dialog
for_window [title="Table tools"] floating enable

# Sound settings
for_window [title="Volume Control"] floating enable

# Gnome system monitor
for_window [title="System Monitor"] floating enable

# Gnome calculator
for_window [title="Calculator"] floating enable

# Ulauncher
for_window [title="Ulauncher - Application Launcher"] floating enable, border none

# Flameshot
for_window [app_id="flameshot"] border pixel 0, floating enable, fullscreen disable, move absolute position 0 0


#
# Screenshot
#
bindsym Print exec grim -g "$(slurp -b '#00000088' -c '#8E1A10')" "/home/merlin/downloads/$(date +'screenshot_%d-%m-%Y_%H-%M-%S.png')"


#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 25px
    bindsym $down resize grow height 25px
    bindsym $up resize shrink height 25px
    bindsym $right resize grow width 25px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 25px
    bindsym Down resize grow height 25px
    bindsym Up resize shrink height 25px
    bindsym Right resize grow width 25px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Clamshell Mode - disable laptop display when closed
#
set $laptop eDP-1
bindswitch --reload --locked lid:on output $laptop disable
bindswitch --reload --locked lid:off output $laptop enable

#
# Keyboard
#
input "type:keyboard" {
    xkb_layout us,sk
    xkb_variant ,qwerty
    xkb_options grp:alt_shift_toggle
    xkb_numlock enabled
}

#
# Audio
#
#bindsym XF86AudioRaiseVolume exec pactl set-sink-volume `pactl list sinks short | awk '{if ($NF == "RUNNING" || $NF == "IDLE") print $1}'` +5%
#bindsym XF86AudioLowerVolume exec pactl set-sink-volume `pactl list sinks short | awk '{if ($NF == "RUNNING" || $NF == "IDLE") print $1}'` -5%
#bindsym XF86AudioMute exec pactl set-sink-mute `pactl list sinks short | awk '{if ($NF == "RUNNING" || $NF == "IDLE") print $1}'` toggle
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle


#
# Media player
#
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioPause exec playerctl play-pause

#
# Brightness
#
bindsym XF86MonBrightnessDown exec sudo brightnessctl set 10%-
bindsym XF86MonBrightnessUp exec sudo brightnessctl set +10%

#
# Touchpad
#
input type:touchpad {
    dwt disabled
    tap enabled
    natural_scroll disabled
    middle_emulation enabled
    drag enabled
}

#
# Shutdown
#
bindsym $mod+Escape exec --no-startup-id ~/.config/wofi/power_menu.sh

#
# Center mouse to focused window
#
mouse_warping none

#
# Hide cursor after such time
#
#seat * hide_cursor 5000

#
# Font
#
font pango:Roboto 16px

#
# Colors
#
# class                  border  background text    indicator child_border
client.focused           #8E1A10 #8E1A10    #e4e4e4 #8E1A10   #8E1A10
client.focused_inactive  #333333 #5f676a    #ffffff #484e50   #5f676a
client.focused_tab_title #333333 #5f676a    #ffffff #ffffff   #ffffff
client.unfocused         #000000 #000000    #888888 #292d2e   #000000
client.urgent            #2f343a #900000    #ffffff #900000   #900000

#
# Focus on window activation
#
focus_on_window_activation focus


# The middle button over a titlebar kills the window
bindsym --release button2 kill

#
# Title bar and borders settings (window decorations)
#
titlebar_padding 6
titlebar_border_thickness 0
default_border normal 3
default_floating_border normal 3











#
# Applications setup
#

#bindsym --to-code $mod+p exec bash ~/.config/sway/applications.sh
#swaymsg 'exec $term -- zsh -ic "eval vpn"; layout stacking'
#exec_always swaymsg 'workspace 1'
#exec_always swaymsg 'exec $term ; layout stacking'
#exec_always swaymsg 'exec geany'
#exec_always swaymsg 'exec slack'
#exec_always firefox


# Workspace 1
#exec_always alacritty --class Alacritty1 -e zsh -ic "vpn; exec zsh"
#exec_always geany
#exec_always firefox
#exec_always slack

#for_window [app_id="Alacritty1"] move container to workspace 1; layout stacking; move up
#for_window [app_id="geany"] move container to workspace 1
#for_window [app_id="firefox"] move container to workspace 1
#for_window [class="Slack"] move container to workspace 1; move down

# Workspace 2
#exec_always google-chrome

#for_window [class="Google-chrome"] move container to workspace 2

# Workspace 3
#exec_always alacritty --class Alacritty@2 -e zsh -ic "j di; exec zsh"
#exec_always phpstorm ~/projects/diggysadventure
#exec_always postman

#for_window [app_id="Alacritty@2"] move container to workspace 3; layout tabbed
#for_window [class="jetbrains-phpstorm"] move container to workspace 3; move position center
#for_window [class="Postman"] move container to workspace 3; move right





#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
#bar {
#    position top
#
#    # When the status_command prints a new line to stdout, swaybar updates.
#    # The default just shows the current date and time.
#    status_command while date +'%d.%m.%Y %H:%M %p'; do sleep 1; done
#
#    colors {
#        statusline #ffffff
#        background #000000
#        inactive_workspace #32323200 #32323200 #5c5c5c
#    }
#}

bar {
    swaybar_command waybar
}

include /etc/sway/config.d/*


#
# nm-applet (network manager)
#
exec nm-applet --indicator

#
# pCloud
#
exec ~/bin/pcloud

#
# Startup application layout
#
exec ~/.config/sway/applications.sh

